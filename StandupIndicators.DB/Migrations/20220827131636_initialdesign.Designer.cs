// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StandupIndicators.DB;

#nullable disable

namespace StandupIndicators.DB.Migrations
{
    [DbContext(typeof(StandupDbContext))]
    [Migration("20220827131636_initialdesign")]
    partial class initialdesign
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("StandupIndicators.Model.Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("StandupIndicators.Model.Kpi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("KpiTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("KpiTypeId");

                    b.ToTable("Kpis");
                });

            modelBuilder.Entity("StandupIndicators.Model.KpiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TargetValue")
                        .HasColumnType("REAL");

                    b.Property<int>("ValueLogic")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("KpiTypes");
                });

            modelBuilder.Entity("StandupIndicators.Model.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("StandupIndicators.Model.Kpi", b =>
                {
                    b.HasOne("StandupIndicators.Model.KpiType", "KpiType")
                        .WithMany()
                        .HasForeignKey("KpiTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KpiType");
                });

            modelBuilder.Entity("StandupIndicators.Model.Owner", b =>
                {
                    b.HasOne("StandupIndicators.Model.Departament", "Departament")
                        .WithMany()
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });
#pragma warning restore 612, 618
        }
    }
}
